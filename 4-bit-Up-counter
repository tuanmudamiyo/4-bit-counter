AREA MYCODE, CODE, READONLY ; code area (segment)
		ENTRY ; start of area MYCODE
		EXPORT SystemInit ; export SystemInit symbol
SystemInit ; SystemInit routine

PINSEL4   EQU 0x4002C010
FIODIR1   EQU 0x2009C020
FIOPIN1   EQU 0x2009C034

        EXPORT __main

__main
        ; Configure GPIO
        LDR R0, =PINSEL4
        LDR R1, [R0]
        BIC R1, R1, #(0x3 << 4)    ; Clear P1.18
        BIC R1, R1, #(0x3 << 8)    ; Clear P1.20
        BIC R1, R1, #(0x3 << 10)   ; Clear P1.21
        BIC R1, R1, #(0x3 << 14)   ; Clear P1.23
        STR R1, [R0]

        LDR R0, =FIODIR1
        LDR R1, [R0]
        ORR R1, R1, #(1 << 18)
        ORR R1, R1, #(1 << 20)
        ORR R1, R1, #(1 << 21)
        ORR R1, R1, #(1 << 23)
        STR R1, [R0]

        ; Initialize binary counter
        MOV R7, #0

loop
        ; Clear LED bits
        LDR R0, =FIOPIN1
        LDR R1, [R0]
        BIC R1, R1, #((1 << 18) | (1 << 20) | (1 << 21) | (1 << 23))

        ; Map bits from R7 to corresponding GPIO bits
        MOV R2, R7

        ; Bit 0 ? P1.18
        TST R2, #1
        ORRNE R1, R1, #(1 << 18)

        ; Bit 1 ? P1.20
        TST R2, #2
        ORRNE R1, R1, #(1 << 20)

        ; Bit 2 ? P1.21
        TST R2, #4
        ORRNE R1, R1, #(1 << 21)

        ; Bit 3 ? P1.23
        TST R2, #8
        ORRNE R1, R1, #(1 << 23)

        ; Output result
        STR R1, [R0]

        ; Delay
        BL DELAY

        ; Increment counter (mod 16)
        ADD R7, R7, #1
        AND R7, R7, #0x0F     ; Keep R7 in range 0-15

        B loop

; Delay subroutine
DELAY
        MOV R6, #0x0010
        MOVT R6, #0x0010
LOOP
        SUB R6, R6, #1
        CMP R6, #1
        BNE LOOP
        BX LR

        END
